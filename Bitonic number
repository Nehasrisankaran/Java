//BITONIC NUMBER:
//MY SOL:
import java.util.*;
public class Elite {
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		int a=sc.nextInt();
		int ar[]=new int[a];
		for(int i=0;i<a;i++) {
			ar[i]=sc.nextInt();
		}
		for(int i=1;i<a-1;i++) {
			if(ar[i]>ar[i-1] && ar[i]>ar[i+1]) {
				System.out.print(ar[i]);
			}
		}
	}
}

//most acceptable:

//BITONIC NUMBER:
import java.util.*;
public class Elite {
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		int a=sc.nextInt();
		int ar[]=new int[a];
		for(int i=0;i<a;i++) {
			ar[i]=sc.nextInt();
		}
		int peak=ar[0];
		for(int i=1;i<a-1;i++) {
			if(ar[i]>ar[i-1] && ar[i]>ar[i+1]) {
				peak=ar[i];
				break;}} //prints fst bitonic number n breaks instead of printing other bitnoics/last bitonic when asked to print the first bitonic number
				System.out.print(peak);  
	}
}
			
